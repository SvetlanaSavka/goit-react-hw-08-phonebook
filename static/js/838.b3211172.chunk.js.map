{"version":3,"file":"static/js/838.b3211172.chunk.js","mappings":"2QAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2MAaXE,EAAmBF,EAAAA,GAAAA,MAAH,6JAShBG,EAAgBH,EAAAA,GAAAA,OAAH,iSAebI,GAAmBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sI,mBC7BhBM,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SARiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BR,EAASS,EAAAA,EAAAA,SAAwBF,IACjCC,KAIA,UAIE,UAAChB,EAAD,CAAakB,aAAa,MAA1B,WACE,SAACf,EAAD,CAAkBgB,QAAQ,OAA1B,mBACA,SAACd,EAAD,CAAkBe,KAAK,MAAMT,KAAK,UAClC,SAAC,KAAD,CAAcA,KAAK,UAEnB,SAACR,EAAD,CAAkBgB,QAAQ,QAA1B,oBACA,SAACd,EAAD,CAAkBe,KAAK,MAAMT,KAAK,WAClC,SAAC,KAAD,CAAcA,KAAK,WAEnB,SAACR,EAAD,CAAkBgB,QAAQ,gBAA1B,uBACA,SAACd,EAAD,CAAkBe,KAAK,OAAOT,KAAK,WAAWU,GAAG,mBACjD,SAAC,KAAD,CAAcV,KAAK,cAEnB,SAACP,EAAD,CAAegB,KAAK,SAApB,0BAMR","sources":["page/Register/Register.styled.js","page/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field /* ErrorMessage */ } from 'formik';\n\nexport const Formcontact = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  width: 470px;\n  :hover {\n    background-color: lightgrey;\n  }\n\n  border-radius: 2px;\n  margin-bottom: 6px;\n`;\n\nexport const Formcontactlabel = styled.label`\n  display: inline-block;\n  margin-left: 20px;\n  font-size: 14px;\n  font-family: sans-serif;\n  cursor: pointer;\n  color: black;\n`;\n\nexport const ButtononClick = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 20px;\n  margin-top: 20px;\n  padding: 4px 18px;\n  width: 120px;\n  border-radius: 4px;\n  background-color: lightblue;\n  :hover {\n    background-color: lightgrey;\n  }\n`;\n\nexport const ContactFormField = styled(Field)`\n  margin-left: 20px;\n  display: inline-block;\n  border-width: 2px;\n  border-radius: 4px;\n  height: 26px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Formcontact,\n  ButtononClick,\n  ContactFormField,\n  Formcontactlabel,\n} from './Register.styled';\nimport authOperations from 'redux/auth/auth-operation';\n\nexport const Register = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(authOperations.register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={handleSubmit}\n    >\n      <Formcontact autoComplete=\"off\">\n        <Formcontactlabel htmlFor=\"name\">Name</Formcontactlabel>\n        <ContactFormField type=\"tel\" name=\"name\" />\n        <ErrorMessage name=\"name\" />\n\n        <Formcontactlabel htmlFor=\"email\">Email</Formcontactlabel>\n        <ContactFormField type=\"tel\" name=\"email\" />\n        <ErrorMessage name=\"email\" />\n\n        <Formcontactlabel htmlFor=\"user-password\">Password</Formcontactlabel>\n        <ContactFormField type=\"text\" name=\"password\" id=\"user-password\" />\n        <ErrorMessage name=\"password\" />\n\n        <ButtononClick type=\"submit\">SignUp</ButtononClick>\n      </Formcontact>\n    </Formik>\n  );\n};\n\nexport default Register;\n"],"names":["Formcontact","styled","Form","Formcontactlabel","ButtononClick","ContactFormField","Field","Register","dispatch","useDispatch","initialValues","name","email","password","onSubmit","values","resetForm","authOperations","autoComplete","htmlFor","type","id"],"sourceRoot":""}